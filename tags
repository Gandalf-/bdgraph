!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Decl	bdgraph.py	/^class Decl:$/;"	c
Node	bdgraph.py	/^class Node:$/;"	c
__init__	bdgraph.py	/^    def __init__(self, line_num, elem_num, left, right):$/;"	m	class:Decl
__init__	bdgraph.py	/^    def __init__(self, name):$/;"	m	class:Node
action	bdgraph.py	/^    def action(self): $/;"	m	class:Node
action	bdgraph.py	/^    def action(self, value): $/;"	m	class:Node
action_type	bdgraph.py	/^    def action_type(self): $/;"	m	class:Node
add_child	bdgraph.py	/^    def add_child(self, child):$/;"	m	class:Node
alt_syntax	bdgraph.py	/^    def alt_syntax(self):$/;"	m	class:Node
alt_syntax	bdgraph.py	/^    def alt_syntax(self, value):$/;"	m	class:Node
avail_opts	bdgraph.py	/^avail_opts = [$/;"	v
children	bdgraph.py	/^    def children(self): $/;"	m	class:Node
clean_str	bdgraph.py	/^clean_str = lambda elm : str(elm).strip()$/;"	v
cleanup	bdgraph.py	/^cleanup = lambda tok : tok[1:].strip() if tok[0] in opt_dict else tok$/;"	v
cleanup_input	bdgraph.py	/^def cleanup_input(ordered_node, filename):$/;"	f
decl_list	bdgraph.py	/^decl_list = []$/;"	v
file_write	bdgraph.py	/^def file_write(output, string):$/;"	f
get_and_prep_elem	bdgraph.py	/^def get_and_prep_elem(key):$/;"	f
had_syntax_error	bdgraph.py	/^had_syntax_error = False$/;"	v
key_list	bdgraph.py	/^key_list = []$/;"	v
main	bdgraph.py	/^def main(argv):$/;"	f
name	bdgraph.py	/^    def name(self): $/;"	m	class:Node
name	bdgraph.py	/^    def name(self, value): $/;"	m	class:Node
nice_line_length	bdgraph.py	/^nice_line_length = 25$/;"	v
no_output	bdgraph.py	/^no_output = False$/;"	v
node_dict	bdgraph.py	/^node_dict = {}$/;"	v
opt_dict	bdgraph.py	/^opt_dict = {$/;"	v
opts_list	bdgraph.py	/^opts_list = []$/;"	v
orig_name	bdgraph.py	/^    def orig_name(self): $/;"	m	class:Node
parse_dependencies	bdgraph.py	/^def parse_dependencies(line, output, line_num):$/;"	f
parse_inputs	bdgraph.py	/^def parse_inputs(line, line_num, elem_num):$/;"	f
parse_options	bdgraph.py	/^def parse_options(line):$/;"	f
prepped	bdgraph.py	/^    def prepped(self): $/;"	m	class:Node
prepped	bdgraph.py	/^    def prepped(self, value): $/;"	m	class:Node
print_dependency	bdgraph.py	/^def print_dependency(outer_elem, ordered_copy, output):$/;"	f
set_action	bdgraph.py	/^    def set_action(self):$/;"	m	class:Node
split_on_nearest_space	bdgraph.py	/^def split_on_nearest_space(word, start):$/;"	f
